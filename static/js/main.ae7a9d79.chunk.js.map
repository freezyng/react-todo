{"version":3,"sources":["api/api.js","redux/actions.js","components/todoInput.jsx","components/todoItem.jsx","components/todoList.jsx","App.js","reportWebVitals.js","redux/state.js","redux/store.js","redux/reducer.js","index.js"],"names":["instance","axios","baseURL","todoPostAPI","get","then","response","data","todoId","delete","todo","post","put","id","message","ADD_TODO","DELETE_TODO","UPDATE_TODO","GET_TODO","getTodoThunk","dispatch","a","type","compose","connect","addTodoThunk","props","todoArry","useSelector","state","useState","textTodo","setTextTodo","className","value","onChange","e","target","onClick","length","TodoItem","editable","setEditable","autoFocus","updateTodoThunk","deleteTodoThunk","TodoList","this","updateProfile","map","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","todoData","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","newTodos","action","push","filter","i","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae7a9d79.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://60b78ee617d1dc0017b8a562.mockapi.io/todo-posts/'\r\n})\r\n\r\n\r\n\r\nconst todoPostAPI = {\r\n    getDataTodo() {\r\n        return instance.get()\r\n        .then(response => response.data);\r\n    },\r\n    deleteTodo(todoId){\r\n        return instance.delete(todoId)\r\n    },\r\n    addDataTodo(todo) {\r\n        return instance.post('', todo)\r\n        .then(response => response.data);\r\n    },\r\n    updateTodo(todo) {\r\n        return instance.put(todo.id, {message: todo.message})\r\n    },\r\n}\r\n\r\n\r\nexport {todoPostAPI}","import {todoPostAPI} from '../api/api';\r\n\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const GET_TODO = 'GET_TODO';\r\n\r\n\r\n//actions\r\nexport const getTodo = (todo) => {\r\n    return { type: GET_TODO, todo }\r\n}\r\n\r\nexport const addTodo = (todo) => {\r\n    return { type: ADD_TODO, todo }\r\n}\r\n\r\nexport const deleteTodo = (todoId) => {\r\n    return { type: DELETE_TODO, todoId }\r\n}\r\n\r\nexport const updateTodo = (todo) => {\r\n    return { type: UPDATE_TODO, todo }\r\n}\r\n\r\n\r\n//thunks\r\nexport const getTodoThunk = () => {\r\n    return async (dispatch) => {\r\n        let response = await todoPostAPI.getDataTodo()\r\n        dispatch(getTodo(response));\r\n    }\r\n}\r\n\r\nexport const addTodoThunk = (todo) => {\r\n    return async (dispatch) => {\r\n        await todoPostAPI.addDataTodo(todo)\r\n        dispatch(getTodoThunk());\r\n    }\r\n}\r\n\r\nexport const deleteTodoThunk = (todoId) => {\r\n    return async (dispatch) => {\r\n        await todoPostAPI.deleteTodo(todoId)\r\n        dispatch(getTodoThunk());\r\n    }\r\n}\r\n\r\nexport const updateTodoThunk = (todo) => {\r\n    return async (dispatch) => {\r\n        await todoPostAPI.updateTodo(todo)\r\n        dispatch(getTodoThunk());\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport './todoInput.css';\r\nimport { compose } from 'redux';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { addTodoThunk } from '../redux/actions';\r\n\r\nfunction TodoInput(props) {\r\n    let todoArry = useSelector(state => state)\r\n    let [textTodo, setTextTodo] = useState()\r\n    return(\r\n        <div>\r\n            <div className=\"row\">\r\n                <input type=\"text\" className=\"form-post\" \r\n                    value={textTodo}\r\n                    onChange={(e) => setTextTodo(e.target.value)}\r\n                />\r\n                <button className=\"btn btn-add-post\"\r\n                    onClick={() => {\r\n                        if(textTodo){\r\n                            props.addTodoThunk({id: todoArry.length + 1, message: textTodo})\r\n                            setTextTodo('')\r\n                        }\r\n                    }}\r\n                >добавить</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    connect('', {addTodoThunk})\r\n)(TodoInput)","import React, { useState } from 'react';\r\nimport './todoItem.css';\r\n\r\nfunction TodoItem(props) {\r\n    let [editable, setEditable] = useState(false);\r\n    let [textTodo, setTextTodo] = useState(props.todo.message);\r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"item-row\">\r\n                <div className=\"id\">#{props.todo.id}</div>\r\n                {editable \r\n                    ? <input type=\"text\"  className=\"form-post\" autoFocus={true}\r\n                        value={textTodo}\r\n                        onChange={(e) => setTextTodo(e.target.value)}\r\n                    /> \r\n                    : <div className=\"title\">{props.todo.message}</div>}\r\n                <div className=\"wrap-btns\">\r\n                    <button className=\"btn btn-edit\" onClick={ () => {\r\n                        if(editable){\r\n                            props.updateTodoThunk({id: props.todo.id, message: textTodo})\r\n                        } \r\n                        setEditable(!editable)\r\n                        }} >изменить</button>\r\n                    <button className=\"btn btn-delete\" onClick={() => props.deleteTodoThunk(props.todo.id)}>удалить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './todoItem.jsx';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport {deleteTodoThunk, updateTodoThunk, getTodoThunk} from '../redux/actions';\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    updateProfile(){\r\n            this.props.getTodoThunk();\r\n    }\r\n    componentDidMount() {\r\n        this.updateProfile()\r\n    }\r\n    \r\n\r\n    render() { \r\n        return(\r\n        <div>\r\n            <h2>todo list</h2>\r\n            {this.props.todo.map(todo => {\r\n                return <TodoItem key={todo.id} todo={todo} \r\n                    deleteTodoThunk={this.props.deleteTodoThunk}\r\n                    updateTodoThunk={this.props.updateTodoThunk} />\r\n            })}\r\n        </div>)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todo: state\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {deleteTodoThunk, updateTodoThunk, getTodoThunk})\r\n)(TodoList)","import './App.css';\r\nimport TodoInput from './components/todoInput.jsx';\r\nimport TodoList from './components/todoList.jsx';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h2>TODO REACT</h2>\r\n      \r\n      <TodoInput />\r\n      <TodoList />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export let todoData = [\r\n    {\r\n        id: 1,\r\n        message: 'ddddd'\r\n    },\r\n]","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport {todoReducer} from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(todoReducer, composeEnhancers(compose(applyMiddleware(thunk))));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport {store};","import { ADD_TODO, DELETE_TODO, UPDATE_TODO, GET_TODO } from './actions';\r\nimport {todoData} from './state';\r\n\r\nexport const todoReducer = (state = todoData, action) => {\r\n    let newTodos;\r\n\r\n    switch (action.type) {\r\n        case GET_TODO:\r\n            newTodos = [...state]\r\n            newTodos = action.todo\r\n            return newTodos\r\n        case ADD_TODO:\r\n            newTodos = [...state]\r\n            newTodos.push(action.todo)\r\n            return newTodos\r\n        case DELETE_TODO:\r\n            newTodos = [...state]\r\n            newTodos = newTodos.filter(todo => todo.id !== action.todoId)\r\n            for(let i = 0; i < newTodos.length; i++) {\r\n                newTodos[i].id = i + 1 \r\n            }\r\n            return newTodos\r\n        case UPDATE_TODO:\r\n            newTodos = [...state]\r\n            newTodos[action.todo.id - 1] = action.todo\r\n            return newTodos\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport {store} from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store} >\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}